// Script para probar la validaci√≥n en la consola del navegador
// Copia y pega este c√≥digo en la consola del navegador en la p√°gina del panel coordinador

console.log("üß™ Iniciando pruebas de validaci√≥n de email @mep.go.cr");

// Funci√≥n de prueba
async function probarValidacionEmail() {
  console.log("\n=== PRUEBA 1: Email v√°lido @mep.go.cr ===");

  // Simular datos del formulario v√°lidos
  const datosValidos = {
    nombre: "Escuela Test V√°lida",
    codigoMEP: "TEST001",
    provincia: "San Jos√©",
    canton: "San Jos√©",
    distrito: "Carmen",
    responsable: {
      nombre: "director test",
      email: "director.test@mep.go.cr",
      telefono: "22334455",
    },
    etiquetas: {
      ubicacion: "urbano",
      tipoInstitucion: "multidocente",
    },
    descripcion: "Centro de prueba v√°lido",
  };

  console.log("üìß Email de prueba:", datosValidos.responsable.email);
  console.log("üì± Tel√©fono de prueba:", datosValidos.responsable.telefono);

  // Validaci√≥n client-side (como en guardarCentro)
  const emailResponsable = datosValidos.responsable.email;
  const telefonoResponsable = datosValidos.responsable.telefono;
  const telefonoLimpio = telefonoResponsable
    ? telefonoResponsable.replace(/[-\s]/g, "")
    : "";

  console.log("üîç Tel√©fono limpio:", telefonoLimpio);

  // Validar tel√©fono
  if (
    telefonoLimpio &&
    (telefonoLimpio.length !== 8 || !/^\d{8}$/.test(telefonoLimpio))
  ) {
    console.log("‚ùå Tel√©fono inv√°lido - debe tener 8 d√≠gitos");
    return;
  } else {
    console.log("‚úÖ Tel√©fono v√°lido");
  }

  // Validar email
  if (!emailResponsable.endsWith("@mep.go.cr")) {
    console.log("‚ùå Email inv√°lido - debe terminar en @mep.go.cr");
    return;
  } else {
    console.log("‚úÖ Email v√°lido - termina en @mep.go.cr");
  }

  console.log("\n=== PRUEBA 2: Email inv√°lido @mep.go.cr ===");
  const emailInvalido1 = "director.test@mep.go.cr";
  console.log("üìß Email de prueba:", emailInvalido1);

  if (!emailInvalido1.endsWith("@mep.go.cr")) {
    console.log("‚úÖ Validaci√≥n funcion√≥ - email rechazado correctamente");
  } else {
    console.log("‚ùå Error en validaci√≥n - email deber√≠a ser rechazado");
  }

  console.log("\n=== PRUEBA 3: Email inv√°lido @gmail.com ===");
  const emailInvalido2 = "director.test@gmail.com";
  console.log("üìß Email de prueba:", emailInvalido2);

  if (!emailInvalido2.endsWith("@mep.go.cr")) {
    console.log("‚úÖ Validaci√≥n funcion√≥ - email rechazado correctamente");
  } else {
    console.log("‚ùå Error en validaci√≥n - email deber√≠a ser rechazado");
  }

  console.log("\n‚úÖ Todas las pruebas de validaci√≥n client-side completadas");
  console.log("üìã Resumen:");
  console.log("   - Emails con @mep.go.cr: ‚úÖ ACEPTADOS");
  console.log("   - Emails con @mep.go.cr: ‚ùå RECHAZADOS");
  console.log("   - Emails con otros dominios: ‚ùå RECHAZADOS");
}

// Ejecutar pruebas
probarValidacionEmail();
